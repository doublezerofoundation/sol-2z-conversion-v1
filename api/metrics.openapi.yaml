openapi: 3.1.0
info:
  title: DoubleZero Metrics API (Lean, Split Endpoints)
  version: "1.1.0"
  description: |
    Serverless Metrics API exposing **bucketed counts** for:
      - Buys
      - Errors (with errorsByCode breakdown)
      - Dequeues (with amount aggregates)

    Clients specify a date range with `from` and `to` parameters.
servers:
  - url: https://api.doublezero.example.com/v1
    description: Production
  - url: https://staging-api.doublezero.example.com/v1
    description: Staging
components:
  parameters:
    FromDate:
      name: from
      in: query
      required: true
      description: Start date (YYYY-MM-DD, UTC)
      schema:
        type: string
        pattern: "^\\d{4}-\\d{2}-\\d{2}$"
        example: "2025-08-01"
    ToDate:
      name: to
      in: query
      required: true
      description: End date inclusive (YYYY-MM-DD, UTC)
      schema:
        type: string
        pattern: "^\\d{4}-\\d{2}-\\d{2}$"
        example: "2025-08-31"

  schemas:
    BucketMeta:
      type: object
      description: Time bucket metadata
      properties:
        bucket:
          type: string
          description: Bucket identifier (YYYY-MM-DD for day, YYYY-MM for month, YYYY for year)
          example: "2025-08-11"
        start:
          type: string
          format: date-time
          description: UTC start timestamp of the bucket
        end:
          type: string
          format: date-time
          description: UTC end timestamp (exclusive) of the bucket
      required: [bucket, start, end]

    BuysBucket:
      allOf:
        - $ref: '#/components/schemas/BucketMeta'
        - type: object
          properties:
            buys:
              type: integer
              minimum: 0
              example: 19
          required: [buys]

    ErrorsBucket:
      allOf:
        - $ref: '#/components/schemas/BucketMeta'
        - type: object
          properties:
            errors:
              type: integer
              minimum: 0
              example: 4
            errorsByCode:
              type: object
              description: Error code counts within the bucket
              additionalProperties:
                type: integer
              example: { BidTooLow: 3, InvalidAttestation: 1 }
          required: [errors, errorsByCode]

    DequeuesBucket:
      allOf:
        - $ref: '#/components/schemas/BucketMeta'
        - type: object
          properties:
            count:
              type: integer
              minimum: 0
              description: Number of dequeue events in the bucket
              example: 5
            solDequeuedTotal:
              type: string
              description: Total SOL dequeued (decimal string)
              example: "12.500000000"
            solDequeuedAvg:
              type: string
              description: Average SOL dequeued per event (decimal string)
              example: "2.500000000"
            solDequeuedP95:
              type: string
              description: 95th percentile SOL dequeued per event (decimal string)
              example: "4.000000000"
          required: [count, solDequeuedTotal]

    RangeResponseBuys:
      type: object
      properties:
        from: { type: string, format: date }
        to: { type: string, format: date }
        data:
          type: array
          items: { $ref: '#/components/schemas/BuysBucket' }
      required: [from, to, data]

    RangeResponseErrors:
      type: object
      properties:
        from: { type: string, format: date }
        to: { type: string, format: date }
        data:
          type: array
          items: { $ref: '#/components/schemas/ErrorsBucket' }
      required: [from, to, data]

    RangeResponseDequeues:
      type: object
      properties:
        from: { type: string, format: date }
        to: { type: string, format: date }
        data:
          type: array
          items: { $ref: '#/components/schemas/DequeuesBucket' }
      required: [from, to, data]

    Error:
      type: object
      properties:
        code: { type: string }
        message: { type: string }
        requestId: { type: string }
      required: [code, message]

paths:
  /buys:
    get:
      tags: [Buys]
      summary: Bucketed buys count
      description: Returns buys aggregated within the date range.
      parameters:
        - $ref: '#/components/parameters/FromDate'
        - $ref: '#/components/parameters/ToDate'
      responses:
        '200':
          description: Buys series
          content:
            application/json:
              schema: { $ref: '#/components/schemas/RangeResponseBuys' }
              examples:
                daily:
                  value:
                    from: "2025-08-01"
                    to: "2025-08-03"
                    data:
                      - bucket: "2025-08-01"
                        start: "2025-08-01T00:00:00Z"
                        end:   "2025-08-02T00:00:00Z"
                        buys: 19
                      - bucket: "2025-08-02"
                        start: "2025-08-02T00:00:00Z"
                        end:   "2025-08-03T00:00:00Z"
                        buys: 14
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Error' }
        '500':
          description: Server error
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Error' }

  /errors:
    get:
      tags: [Errors]
      summary: Bucketed error frequency and breakdown
      description: Returns total errors and errorsByCode aggregated within the range.
      parameters:
        - $ref: '#/components/parameters/FromDate'
        - $ref: '#/components/parameters/ToDate'
      responses:
        '200':
          description: Errors series
          content:
            application/json:
              schema: { $ref: '#/components/schemas/RangeResponseErrors' }
              examples:
                daily:
                  value:
                    from: "2025-08-01"
                    to: "2025-08-03"
                    data:
                      - bucket: "2025-08-01"
                        start: "2025-08-01T00:00:00Z"
                        end:   "2025-08-02T00:00:00Z"
                        errors: 4
                        errorsByCode: { BidTooLow: 3, InvalidAttestation: 1 }
                      - bucket: "2025-08-02"
                        start: "2025-08-02T00:00:00Z"
                        end:   "2025-08-03T00:00:00Z"
                        errors: 2
                        errorsByCode: { BidTooLow: 1, StalePrice: 1 }
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Error' }
        '500':
          description: Server error
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Error' }

  /dequeues:
    get:
      tags: [Dequeues]
      summary: Bucketed dequeue counts and SOL amounts
      description: Returns dequeue event count and SOL amount aggregates within the range.
      parameters:
        - $ref: '#/components/parameters/FromDate'
        - $ref: '#/components/parameters/ToDate'
      responses:
        '200':
          description: Dequeues series
          content:
            application/json:
              schema: { $ref: '#/components/schemas/RangeResponseDequeues' }
              examples:
                daily:
                  value:
                    from: "2025-08-01"
                    to: "2025-08-03"
                    data:
                      - bucket: "2025-08-01"
                        start: "2025-08-01T00:00:00Z"
                        end:   "2025-08-02T00:00:00Z"
                        count: 5
                        solDequeuedTotal: "12.500000000"
                        solDequeuedAvg:   "2.500000000"
                        solDequeuedP95:   "4.000000000"
                      - bucket: "2025-08-02"
                        start: "2025-08-02T00:00:00Z"
                        end:   "2025-08-03T00:00:00Z"
                        count: 3
                        solDequeuedTotal: "6.000000000"
                        solDequeuedAvg:   "2.000000000"
                        solDequeuedP95:   "3.000000000"
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Error' }
        '500':
          description: Server error
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Error' }
